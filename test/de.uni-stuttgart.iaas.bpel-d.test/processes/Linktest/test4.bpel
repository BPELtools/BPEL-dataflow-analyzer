<!-- test4 BPEL Process [Generated by the Eclipse BPEL Designer]  -->
<!-- Date: Wed Feb 03 12:22:01 CET 2010 -->

<bpel:process name="test4"
         targetNamespace="http://gyy.com/gyyNS"
         suppressJoinFailure="yes"
         xmlns:tns="http://gyy.com/gyyNS"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         >
    <!-- Import the client WSDL -->
	<bpel:import location="test4Artifacts.wsdl" namespace="http://gyy.com/gyyNS" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
	        
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!--
        The 'client' role represents the requester of this service. It is 
        used for callback. The location and correlation information associated
        with the client role are automatically set using WS-Addressing.
        -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:test4"
                     myRole="test4Provider"
                     partnerRole="test4Requester"
                     />
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:test4RequestMessage"/>
                  
        <!-- Reference to the message that will be sent back to the 
             requester during callback
             -->
        <bpel:variable name="output"
                  messageType="tns:test4ResponseMessage"/>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence xml:ID="1">
        
        <!-- Receive input from requestor. 
             Note: This maps to operation defined in test4.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:test4"
                 operation="initiate" variable="input"
                 createInstance="yes" xml:ID="3"/>
        
        <!-- Asynchronous callback to the requester.
             Note: the callback location and correlation id is transparently handled 
             using WS-addressing.
             -->
        <bpel:assign xml:ID="5">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal>1</bpel:literal>
                </bpel:from>
                <bpel:to variable="startValue"/>
            </bpel:copy>
            <bpel:copy>
                <bpel:from>
                    <bpel:literal>10</bpel:literal>
                </bpel:from>
                <bpel:to variable="endValue"/>
            </bpel:copy>
        </bpel:assign>
         <bpel:repeatUntil name = "rp">
            <bpel:assign name = "a">
                <bpel:copy>
                    <bpel:from>concat($startValue,$Request)</bpel:from>
                    <bpel:to part="echoResponse" variable="Response"/>
                </bpel:copy>
                <bpel:copy>
                    <bpel:from>number($startValue + 1)</bpel:from>
                    <bpel:to variable="startValue"/>
                </bpel:copy>
            </bpel:assign>
            <bpel:condition>not($startValue &lt; $endValue)</bpel:condition>
        </bpel:repeatUntil>
         <bpel:reply name="receiveInput" partnerLink="client"
                 portType="tns:test4"
                 operation="initiate" variable="output" xml:ID="4"/>
    </bpel:sequence>
</bpel:process>


